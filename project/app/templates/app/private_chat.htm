<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Private Chat</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f1f1f1;
      margin: 0;
      padding: 0;
    }

    .chat-container {
      max-width: 600px;
      margin: 50px auto;
      background: white;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      display: flex;
      flex-direction: column;
      height: 80vh;
    }

    .chat-header {
      padding: 15px;
      background: #4a90e2;
      color: white;
      font-size: 18px;
      border-radius: 8px 8px 0 0;
    }

    .chat-box {
      flex-grow: 1;
      padding: 15px;
      overflow-y: auto;
      background: #fafafa;
      display: flex;
      flex-direction: column;
    }

    .date-divider {
      text-align: center;
      margin: 15px 0;
      font-size: 14px;
      color: #888;
    }

    .message {
      max-width: 70%;
      margin-bottom: 12px;
      padding: 10px 14px;
      border-radius: 15px;
      position: relative;
      display: inline-block;
      word-wrap: break-word;
    }
    .message.you {
      background: #d1e7ff;
      align-self: flex-end;
      text-align: right;
      border-bottom-right-radius: 0;
    }
    
    .message.other {
      background: #eee;
      align-self: flex-start;
      text-align: left;
      border-bottom-left-radius: 0;
    }
    

    .timestamp {
      font-size: 12px;
      color: #666;
      margin-top: 5px;
      text-align: right;
    }

    .chat-input {
      display: flex;
      border-top: 1px solid #ddd;
    }

    .chat-input input {
      flex: 1;
      padding: 10px;
      border: none;
      border-radius: 0 0 0 8px;
      font-size: 16px;
    }

    .chat-input button {
      padding: 10px 20px;
      background: #4a90e2;
      color: white;
      border: none;
      border-radius: 0 0 8px 0;
      cursor: pointer;
    }

    .back-link {
      padding: 10px;
      text-align: center;
      background: #f9f9f9;
      border-top: 1px solid #ddd;
      border-radius: 0 0 8px 8px;
    }

    .back-link a {
      text-decoration: none;
      color: #4a90e2;
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <div class="chat-header">
      Chatting with {{ other_user.username }}
    </div>

    <div class="chat-box" id="chat-box">
      <!-- Messages will appear here -->
    </div>

    <div class="chat-input">
      <input type="text" placeholder="Type your message..." id="message-input">
      <button type="submit" onclick="sendMessage()">Send</button>
    </div>

    <div class="back-link">
      <a href="{% url 'index' %}">‚Üê Back to User List</a>
    </div>
  </div>

  <script>
    const otherUserId = "{{ other_user.id }}";
    const currentUserId = "{{ request.user.id }}";
    const chatBox = document.getElementById('chat-box');
    const input = document.getElementById('message-input');

    const socket = new WebSocket(
      'ws://' + window.location.host + '/ws/privatechat/' + otherUserId + '/'
    );

    socket.onmessage = function(e) {
      const data = JSON.parse(e.data);
      const date = new Date(data.timestamp);
      const dateString = date.toDateString();
      const timeString = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

      // Insert date divider if it's not already there
      const lastDate = chatBox.querySelector('.date-divider:last-of-type');
      if (!lastDate || lastDate.dataset.date !== dateString) {
        const divider = document.createElement('div');
        divider.className = 'date-divider';
        divider.dataset.date = dateString;
        divider.innerText = dateString;
        chatBox.appendChild(divider);
      }

      const msgDiv = document.createElement('div');
      msgDiv.classList.add('message');
      msgDiv.classList.add(data.sender_id === currentUserId ? 'you' : 'other');

      const content = document.createElement('div');
      content.innerText = data.message;

      const timestamp = document.createElement('div');
      timestamp.className = 'timestamp';
      timestamp.innerText = timeString;

      msgDiv.appendChild(content);
      msgDiv.appendChild(timestamp);
      chatBox.appendChild(msgDiv);
      chatBox.scrollTop = chatBox.scrollHeight;
    };

    socket.onopen = function() {
      console.log('WebSocket connected');
    };

    socket.onclose = function() {
      console.log('WebSocket disconnected');
    };

    function sendMessage() {
      const message = input.value.trim();
      if (!message) return;

      socket.send(JSON.stringify({
        'message': message,
        'receiver_id': otherUserId
      }));

      input.value = '';
    }
  </script>  
</body>
</html>
